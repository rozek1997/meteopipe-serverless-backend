AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Root template for deploying serverless stack

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: python3.8

Parameters: #section for defining variables which i will referred later on inside this template
  AppName:
    Type: String
    Default: MeteoPipe


Resources:
  MeteoPipeLibLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: MeteoPipeLibLambdaLayer
      Description: Contatining all necessary libs for execution of lambda function
      ContentUri: dependencies/python/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

  MeteoPipeAWSIoTCoreRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for calling and managing AWS IoT from lambda function
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSIoTConfigAccess
      RoleName: MeteoPipeLambdaRoleForAWSIoT
      Tags:
        - Key: "used-for"
          Value: "meteo-pipe lambda"

  MeteoPipeCognitoPostAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for creating new user in dynamoDB after confirming sign-up
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonCognitoDeveloperAuthenticatedIdentities
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: MeteoPipeLambdaRoleForPostAuthorization
      Tags:
        - Key: "used-for"
          Value: "meteo-pipe lambda"

Outputs:
  MeteoPipeLibLambdaLayer:
    Description: Library Layer for lambdas used in MeteoPipe app
    Value: !Ref MeteoPipeLibLambdaLayer #!!!!!!!!!!Ref When the logical ID of this resource is provided to the Ref intrinsic function, it returns the resource ARN of the underlying Lambda LayerVersion.
    Export:
      Name: !Sub "${AppName}-LibLambdaLayer"

  MeteoPipeAWSIoTCoreRole:
    Description: Role for executing code within AWS Iot Core
    Value: !GetAtt MeteoPipeAWSIoTCoreRole.Arn
    Export:
      Name: !Sub "${AppName}-AWSIoTCoreRole"

  MeteoPipeCognitoPostAuthRole:
    Description: Role to create new user in DynamoDB table after new user sign-up to Cognito user pool
    Value: !GetAtt MeteoPipeCognitoPostAuthRole.Arn
    Export:
      Name: !Sub "${AppName}-CognitoPostAuthRole"


