AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CloudFormation template for provisioning api for meteopipe app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Runtime: python3.8

Parameters:
  AppName:
    Type: String
    Default: MeteoPipe
  IoTEndpointConnect:
    Type: String
    Default: arn:aws:iot:eu-central-1:045341403599:client/meteopipe-thing/
  IoTEndpointSubscribe:
    Type: String
    Default: arn:aws:iot:eu-central-1:045341403599:topicfilter/meteopipe-thing/
  IoTEndpointPublish: #publish and receive endpoint are the same
    Type: String
    Default: arn:aws:iot:eu-central-1:045341403599:topic/meteopipe-thing/


Resources:
  RegisterDeviceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: register_device/
      Handler: register_device.lambda_handler
      Layers:
        - Fn::ImportValue:
            !Sub "${AppName}-LibLambdaLayer"
      Role: !GetAtt MeteoPipeManagingDeviceRole.Arn
      Environment:
        Variables:
          IoTEndpointConnect: !Sub "${IoTEndpointConnect}"
          IoTEndpointSubscribe: !Sub "${IoTEndpointSubscribe}"
          IoTEndpointPublish: !Sub "${IoTEndpointPublish}"
      Events:
        RegisterDevice:
          Type: HttpApi
          Properties:
            ApiId: !Ref MeteoPipeApi
            Method: POST
            Path: /device/register-device

  MeteoPipeManagingDeviceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for allowing managed IoT devices
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSIoTFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: MeteoPipeManageDeviceRole
      Tags:
        - Key: "used-for"
          Value: "meteo-pipe lambda"

  MeteoPipeApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Test
      CorsConfiguration: True